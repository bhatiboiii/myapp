pipeline {
    agent any

    environment {
        IMAGE_NAME = 'myapp:latest'
        BLUE_PORT = '8080'
        GREEN_PORT = '8081'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git 'https://github.com/your-username/your-repo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t $IMAGE_NAME ."
            }
        }

        stage('Deploy to Green') {
            steps {
                sh '''
                docker stop green || true
                docker rm green || true
                docker run -d -p 8081:80 --name green $IMAGE_NAME
                '''
            }
        }

        stage('Health Check on Green') {
            steps {
                sh 'curl -f http://localhost:8081 || exit 1'
            }
        }

        stage('Switch Traffic to Green') {
            steps {
                sh '''
                docker stop blue || true
                docker rm blue || true
                docker rename green blue
                docker run -d -p 8080:80 --name blue $IMAGE_NAME
                '''
            }
        }

        stage('Cleanup') {
            steps {
                sh 'docker system prune -f'
            }
        }
    }
}
